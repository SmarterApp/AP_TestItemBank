<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans" 
        xmlns:mongo="http://www.springframework.org/schema/data/mongo" 
        xmlns:context="http://www.springframework.org/schema/context" 
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xmlns:util="http://www.springframework.org/schema/util"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.1.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
                http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

     <bean id="propertyConfigurer" class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:sftp.properties</value>
                <value>classpath:mongo.properties</value>
            </list>
        </property>
    </bean>
     <bean id="tenantEnforcementService" class="org.opentestsystem.authoring.testitembank.mocks.MockTenantEnforcementService" />
	<bean id="sftpFileTransferService" class="org.opentestsystem.authoring.testitembank.mocks.MockFileRetreivalService" />
    
    <import resource="classpath:/spring/persistence-context.xml" />
	<import resource="classpath:/spring/rest-context.xml" />
	<import resource="classpath:/spring/service-context.xml" />

    <!-- just a placeholder to override the mongo in the tests -->
    <mongo:mongo id="tib-mongo"/>
	<mongo:db-factory id="mongoDbFactory" dbname="test" host="localhost" port="55554" />
    
    <bean id="objectMapper" class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean" >
        <property name="indentOutput" value="true"/>
        <property name="simpleDateFormat" value="yyyy-MM-dd'T'HH:mm:ss.SSSZ"/>
    </bean>
    
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean" >
        <property name="targetObject" ref="objectMapper"/>
        <property name="targetMethod" value="registerModule"/>
        <property name="arguments">
            <list>
                <bean class="com.fasterxml.jackson.datatype.joda.JodaModule" />
            </list>
        </property>
    </bean>
    
    <mvc:interceptors>
        <bean class="org.opentestsystem.shared.docs.RequestLoggingInterceptor" />
    </mvc:interceptors>

    <mvc:annotation-driven >
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter" />
            <bean class="org.springframework.http.converter.ResourceHttpMessageConverter" />
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper" ref="objectMapper" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

</beans>
