/*******************************************************************************
 * Educational Online Test Delivery System 
 * Copyright (c) 2014 American Institutes for Research
 *   
 * Distributed under the AIR Open Source License, Version 1.0 
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testitembank.integration;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

import java.io.File;
import java.util.HashMap;
import java.util.Map;

import org.junit.Test;
import org.opentestsystem.authoring.testitembank.domain.ExportSet;
import org.springframework.beans.factory.annotation.Value;

public class ExportSetControllerTest extends AbstractRestEmbeddedMongoTest {

    @Value("classpath:single_valid_item.zip")
    private File testFile;

    private static final int NUMBER_OF_ITEMS_IN_FILE = 1;

    @SuppressWarnings("unchecked")
    private Map<String, Object> getParams() {
        final Map<String, Object> exportItem1 = new HashMap<String, Object>();
        exportItem1.put("version", "1.0");
        exportItem1.put("identifier", "apip_item1");

        final Map<String, Object> exportItem2 = new HashMap<String, Object>();
        exportItem2.put("version", "1.0");
        exportItem2.put("identifier", "apip_item2");

        final Map<String, Object> params = new HashMap<String, Object>();
        params.put("items", buildParamList(exportItem1, exportItem2));
        params.put("tenantId", "myTenantId");
        return params;
    }

    @Test
    public final void testRequestExportSet() {
        final Map<String, Object> params = getParams();

        final ExportSet savedExport = callPOSTRestService("/exportSet", params, ExportSet.class);
        assertNotNull("id should be created", savedExport.getId());
        assertEquals("should be 2 export items", 2, savedExport.getItems().size());
        assertNotNull("requested date should be created by server", savedExport.getTimeRequested());
    }

    @Test
    public final void testGetExportSet() {
        final Map<String, Object> params = getParams();
        final ExportSet savedExport = callPOSTRestService("/exportSet", params, ExportSet.class);

        final ExportSet exportFromGet = callGETRestService("/exportSet/" + savedExport.getId(), ExportSet.class);
        assertEquals("id should be created", savedExport.getId(), exportFromGet.getId());
        assertEquals("should be 2 export items", savedExport.getItems().size(), exportFromGet.getItems().size());
        assertEquals("requested date should be created by server", savedExport.getTimeRequested(), exportFromGet.getTimeRequested());
    }

    @Test
    public final void testGetHttpExportSet() {
        final Map<String, Object> params = getParams();
        final ExportSet savedExport = callPOSTRestService("/exportSet", params, ExportSet.class);

        final ExportSet exportFromGet = callGETRestService("/exportSet/" + savedExport.getId(), ExportSet.class);
        assertEquals("id should be created", savedExport.getId(), exportFromGet.getId());
        assertEquals("should be 2 export items", savedExport.getItems().size(), exportFromGet.getItems().size());
        assertEquals("requested date should be created by server", savedExport.getTimeRequested(), exportFromGet.getTimeRequested());
    }

}
