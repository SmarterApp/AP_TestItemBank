/*******************************************************************************
 * Educational Online Test Delivery System 
 * Copyright (c) 2014 American Institutes for Research
 *   
 * Distributed under the AIR Open Source License, Version 1.0 
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testitembank.integration;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;

import java.io.File;

import org.joda.time.DateTime;
import org.junit.Test;
import org.opentestsystem.authoring.testitembank.domain.ImportFile;
import org.opentestsystem.authoring.testitembank.domain.ImportSet;
import org.opentestsystem.authoring.testitembank.domain.ImportStatus;
import org.opentestsystem.authoring.testitembank.domain.ImportType;
import org.opentestsystem.authoring.testitembank.domain.Item;
import org.opentestsystem.authoring.testitembank.service.FileTransferService;
import org.opentestsystem.authoring.testitembank.service.ImportSetService;
import org.opentestsystem.authoring.testitembank.service.ItemService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.data.mongodb.core.MongoTemplate;

public class ImportItemWithDependenciesTest extends AbstractPersistenceEmbeddedTest {

    //file contains 1 item with a word list and tutorial... and a stimulus
    @Value("classpath:tenant_123/item_with_dependants.zip")
    private File testFile;

    @Autowired
    private ImportSetService importSetServiceImpl;

    @Autowired
    private ItemService itemService;

    @Autowired
    private FileTransferService sftpFileTransferServiceImpl;

    @Autowired
    private MongoTemplate mongoTemplate;


    @Test
    public void validData() {
        ImportSet importSet = getTestImportSet(ImportType.STAGED_FILE, testFile.getAbsolutePath());

        assertNull(importSet.getImportCompleteTime());
        importSetServiceImpl.importFileSet(importSet);

        importSet = importSetServiceImpl.getImportSet(importSet.getId());
        final ImportFile firstFile = importSet.getImportFiles().get(0);
        assertEquals("complete status expected", ImportStatus.IMPORT_COMPLETE, firstFile.getImportStatus());
        
        assertEquals("should be an item", 4, mongoTemplate.findAll(Item.class).size());
        assertEquals("should be an importset", 1, mongoTemplate.findAll(ImportSet.class).size());
    }
    
    
    @Test
    public void associatedAttributes() {
        ImportSet importSet = getTestImportSet(ImportType.STAGED_FILE, testFile.getAbsolutePath());

        assertNull(importSet.getImportCompleteTime());
        importSetServiceImpl.importFileSet(importSet);

        importSet = importSetServiceImpl.getImportSet(importSet.getId());
        
        Item item = itemService.retrieveItemByTenantIdAndIdentifier("123", "item-187-545");
        assertEquals("falied status code expected", "item-187-801", item.getAssociatedWordlist());
        assertEquals("falied status code expected", "item-187-1078", item.getAssociatedTutorial());
        assertEquals("falied status code expected", "stim-187-3554", item.getAssociatedStimulus());
        
    }


    private ImportSet getTestImportSet(final ImportType importType, final String pathName) {
        final ImportSet importSet = new ImportSet();
        importSet.setTenantId("123");
        importSet.setImportStatus(ImportStatus.UNIMPORTED);
        importSet.setImportType(importType);
        importSet.setRequestTime(new DateTime());
        importSet.addFilePathToImport(pathName);
        assertNull("id not set yet", importSet.getId());
        importSetServiceImpl.saveImportSet(importSet);
        assertNotNull("should have created id on insert", importSet.getId());
        return importSet;
    }
   
}
