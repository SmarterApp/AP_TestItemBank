/*******************************************************************************
 * Educational Online Test Delivery System 
 * Copyright (c) 2014 American Institutes for Research
 *   
 * Distributed under the AIR Open Source License, Version 1.0 
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testitembank.apipzip.domain;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlRootElement;

import org.springframework.util.CollectionUtils;

@XmlRootElement(name = "manifest")
public class ApipManifest {

    private String identifier;
    private String schema;
    private String schemaVersion;

    private Map<String, String> metaData = new HashMap<String, String>();

    private List<ApipManifestResource> resources;

    public String getSchema() {
        return schema;
    }

    public void setSchema(final String inSchema) {
        this.schema = inSchema;
    }

    public Map<String, String> getMetaData() {
        return metaData;
    }

    public void setMetaData(final Map<String, String> inMetaData) {
        this.metaData = inMetaData;
    }

    @XmlAttribute
    public String getIdentifier() {
        return identifier;
    }

    public void setIdentifier(final String inIdentifier) {
        this.identifier = inIdentifier;
    }

    public String getSchemaVersion() {
        return schemaVersion;
    }

    public void setSchemaVersion(final String inSchemaVersion) {
        this.schemaVersion = inSchemaVersion;
    }

    @XmlElementWrapper(name = "resources")
    @XmlElement(name = "resource", type = ApipManifestResource.class)
    public List<ApipManifestResource> getResources() {
        return resources;
    }

    public void setResources(final List<ApipManifestResource> inResources) {
        this.resources = inResources;
    }

    public Map<String, ApipManifestResource> getResourceMap() {
        Map<String, ApipManifestResource> resourceMap = new HashMap<String, ApipManifestResource>();
        if (!CollectionUtils.isEmpty(resources)) {
            for (ApipManifestResource res : resources) {
                resourceMap.put(res.getIdentifier(), res);
            }
        }
        return resourceMap;
    }

}
