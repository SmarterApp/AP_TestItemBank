/*******************************************************************************
 * Educational Online Test Delivery System 
 * Copyright (c) 2014 American Institutes for Research
 *   
 * Distributed under the AIR Open Source License, Version 1.0 
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testitembank.domain;

import java.util.Arrays;
import java.util.List;
import java.util.Map;

import org.opentestsystem.shared.search.domain.AbstractSearchRequest;
import org.opentestsystem.shared.search.domain.SearchFilter;
import org.opentestsystem.shared.search.domain.SearchFilter.Operator;
import org.opentestsystem.shared.search.domain.SearchFilter.SearchDataType;

/**
 * This is a psuedo-domain object, not really existing in the persistent store, but instead is used as part of the
 * Gateway interface for convey complex search criteria. Note: page counting in mongo is zero indexed.
 */

public class ItemMetadataValueSearchRequest extends AbstractSearchRequest {

    private static final long serialVersionUID = -7724545932368832114L;

    private static final String SEARCH_RESOURCE = "/itemMetadataValue";

    public ItemMetadataValueSearchRequest(final Map<String, String[]> inRequestMap) {
        super(inRequestMap);
    }

    private static final List<SearchFilter> SEARCH_FILTERS = Arrays
            .asList(new SearchFilter[] {
                    new SearchFilter("tenantId", Operator.EQ, SearchDataType.String),
                    new SearchFilter("metadataKey", Operator.EQ, SearchDataType.String),
                    new SearchFilter("metadataValue", Operator.WLD_REG, SearchDataType.String)
            });

    @Override
    public boolean isValid() {
        final String[] tenantIds = getSearchCriteria().get("tenantId");
        return tenantIds != null;
    }

    @Override
    public List<SearchFilter> getSearchFilters() {
        return SEARCH_FILTERS;
    }

    @Override
    public String getSearchResource() {
        return SEARCH_RESOURCE;
    }

}
